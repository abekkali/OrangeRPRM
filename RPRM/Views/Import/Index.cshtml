@model ImportViewModel

@{
    ViewData["Title"] = "Orange - RPRM";
}
<div class="pagetitle">
    <h1>Dashboard</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item active">Import</li>
        </ol>
    </nav>
</div><!-- End Page Title -->
    <div class="card">
       <div class="card-body">

        <div id="show-message"></div>
    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
        <form asp-action="ImportExcel" method="post" enctype="multipart/form-data" onsubmit="return false;">
        <br />
        <div class="form-group">
            <label for="importType">Type d'importation</label>
            <select name="importType" class="form-control">
                    @foreach (var className in ViewBag.ClassNames)
                    {
                        <option value="@className">@className</option>
                    }
            </select>
        </div>
        <br />
        <div class="form-group">
                <input type="file" id="file-input" name="file" class="form-control" />
        </div>
            <br />
            <div id="error-message" class="alert alert-danger bg-danger text-light border-0 alert-dismissible fade show" role="alert">
                Ficher Invalid ! seulement fichier  excel (.xls) ou (.xlsx)
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
            <div class="progress mt-3" id="progressContainer" style="display: none;">
                <div class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
            </div>
            
            <br />
            <button type="submit" id="submit-button" class="btn btn-primary" disabled>Importer</button>
    </form>
        
    </div>

</div>
 @section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.min.js"></script>
    <script>
        document.getElementById("file-input").addEventListener("change", function (event) {
            const file = event.target.files[0];
            const errorMessageElement = document.getElementById("error-message");
            const submitButton = document.getElementById("submit-button");

            if (file) {
                const fileExtension = file.name.split(".").pop().toLowerCase();

                if (fileExtension === "xls" || fileExtension === "xlsx") {
                    errorMessageElement.style.display = "none";
                    submitButton.disabled = false;
                } else {
                    errorMessageElement.style.display = "block";
                    submitButton.disabled = true;
                }
            } else {
                errorMessageElement.style.display = "none";
                submitButton.disabled = true;
            }
        });

        $(document).ready(function () {
            $("#submit-button").click(function () {
                if ($("#file-input").val() == "") {
                    alert("Veuillez sélectionner un fichier Excel.");
                    return;
                }

                var formData = new FormData();
                formData.append("importType", $("select[name='importType']").val());
                formData.append("file", $("#file-input")[0].files[0]);

                $("#progressContainer").show();

                $.ajax({
                    url: "/Import/ImportExcel",
                    type: "POST",
                    data: formData,
                    contentType: false,
                    processData: false,
                    xhr: function () {
                        var xhr = new window.XMLHttpRequest();
                        xhr.upload.addEventListener("progress", function (evt) {
                            if (evt.lengthComputable) {
                                var percentComplete = evt.loaded / evt.total;
                                percentComplete = parseInt(percentComplete * 100);
                                $(".progress-bar").width(percentComplete + "%").attr("aria-valuenow", percentComplete).text(percentComplete + "%");
                            }
                        }, false);
                        return xhr;
                    },
                    success: function (response) {
                        // Cachez la barre de progression et réinitialisez-la à 0%
                        $("#progressContainer").hide();
                        $(".progress-bar").width("0%").attr("aria-valuenow", 0).text("0%");
                        // affiche success message
                        if (response.successMessage) {
                            var successAlert = $("<div class='alert alert-success'>" + response.successMessage + "</div>");
                            $("#show-message").prepend(successAlert);
                            setTimeout(function () {
                                successAlert.fadeOut("slow", function () {
                                    $(this).remove();
                                });
                            }, 12000);
                        }
                        if (response.updateMessage) {
                            var updateAlert = $("<div class='alert alert-primary'>" + response.updateMessage + "</div>");
                            $("#show-message").prepend(updateAlert);
                            setTimeout(function () {
                                updateAlert.fadeOut("slow", function () {
                                    $(this).remove();
                                });
                            }, 12000);
                        }
                        if (response.errorMessage) {
                            var updateAlert = $("<div class='alert alert-danger alert-dismissible fade show' role='alert'>" + response.errorMessage + "<button type='button' class='btn-close' data-bs-dismiss='alert' aria-label='Close'></button></div> ");
                            $("#show-message").prepend(updateAlert);

                        }
                    },
                    error: function (xhr, status, error) {
                        // Cachez la barre de progression et réinitialisez-la à 0%
                        $("#progressContainer").hide();
                        $(".progress-bar").width("0%").attr("aria-valuenow", 0).text("0%");
                        // Affichez le message d'erreur ou un message d'erreur générique
                        var errorMessage = "Une erreur s'est produite lors de l'importation : " + error;
                        var errorAlert = $("<div class='alert alert-danger'>" + errorMessage + "</div>");
                        $("#show-message").prepend(errorAlert);
                        setTimeout(function () {
                            errorAlert.fadeOut("slow", function () {
                                $(this).remove();
                            });
                        }, 12000);
                    }
                });
            });
        });
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/progressHub")
            .build();

        connection.start()
            .then(() => {
                console.log("Connected to the ProgressHub");
            })
            .catch(err => {
                console.error("Error connecting to the ProgressHub:", err);
            });

        connection.on("UpdateProgress", (percentage) => {
            const progressBar = document.querySelector("#progressContainer .progress-bar");
            progressBar.style.width = percentage + "%";
            progressBar.setAttribute("aria-valuenow", percentage);
            progressBar.textContent = Math.round(percentage) + "%";
        });
        connection.on("ImportCompleted", () => {
            hideProgressBar();
        });
    </script>
      }