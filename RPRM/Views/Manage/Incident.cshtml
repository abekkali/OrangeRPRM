@using RPRM.Models.Metiers;
@model List<Incident>

@{
    ViewData["Title"] = "Orange -RPRM";
    await Component.InvokeAsync("CheckPermission", new { className = "Incidents" });
    var permissions = TempData["Permissions"] as dynamic;
    bool hasViewPermission = permissions?.View ?? false;
    bool hasEditPermission = permissions?.Edit ?? false;


}

<div class="pagetitle">
    <h1>Gestion des Incidents</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item">Manager</li>
            <li class="breadcrumb-item active">Incidents</li>
        </ol>
    </nav>
</div><!-- End Page Title -->
<div class="modal fade" id="addIncidentModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Ajouter Incident</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addIncidentForm" asp-controller="Manage" asp-action="AddIncident" method="post">
                <div class="modal-body">
                    <div id="modalIncidentmessage"></div>
                    <div class="row mb-3">
                        <label for="plmnSelect" class="col-md-4 col-lg-3 col-form-label">Code PLMN</label>
                        <div class="col-md-8 col-lg-9">
                            <input class="form-select" list="plmnOptions" id="plmnSelect" name="Code_PLMN" required>
                            <datalist id="plmnOptions">
                            </datalist>
                            <span id="plmnError" class="error-message" style="display:none;">Veuillez sélectionner une option valide</span>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="imsi" class="col-md-4 col-lg-3 col-form-label">IMSI</label>
                        <div class="col-md-8 col-lg-9">
                            <input type="text" id="imsi" name="IMSI" class="form-control" oninput="countChar(this)">
                            <div class="char-counter" id="counter-imsi"></div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="msisdn" class="col-md-4 col-lg-3 col-form-label">MSISDN</label>
                        <div class="col-md-8 col-lg-9">
                            <input type="text" id="msisdn" name="MSISDN" class="form-control" oninput="countChar(this)">
                            <div class="char-counter" id="counter-msisdn"></div>
                        </div>
                    </div>

                    <div class="row">
                    <div class="mb-3 col-6">
                        <label for="dateDebut" class="col-form-label">Date de début</label>
                            <input type="date" id="dateDebut" name="date_d" class="form-control" >
                    </div>
                    <div class="mb-3 col-6">
                        <label for="dateFin" class="col-form-label">Date de fin</label>
                            <input type="date" id="dateFin" name="date_f" class="form-control">
                    </div>
                    </div>
                    <div class="row mb-3">
                        <label for="commentaire" class="col-md-4 col-lg-3 col-form-label">Commentaire</label>
                        <div class="col-md-8 col-lg-9">
                            <input type="text" id="commentaire" name="Commentaire" class="form-control" required>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="codeTT" class="col-md-4 col-lg-3 col-form-label">Code TT</label>
                        <div class="col-md-8 col-lg-9">
                            <input type="text" id="codeTT" name="Code_TT" class="form-control" required>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label for="typeIncident" class="col-md-4 col-lg-3 col-form-label">Type Incident</label>
                        <div class="col-md-8 col-lg-9">
                            <select class="form-select" id="typeIncident" name="Type_Incident_id" required>
                            </select>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="direction" class="col-md-4 col-lg-3 col-form-label">Direction</label>
                        <div class="col-md-8 col-lg-9">
                            <select class="form-select" id="direction" name="Direction_id" required>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="modifyIncidentModal" tabindex="-1" aria-labelledby="modifyIncidentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form id="modifyIncidentForm" asp-controller="Manage" asp-action="ModifyIncident" method="post">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modifyIncidentModalLabel">Modifier l'incident</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                    <div id="modalModIncidentmessage"></div>
                    <div class="row">
                        <div class="mb-3 col-6">
                            <label for="codeIncident" class="form-label">Code Incident</label>
                            <input type="text" class="form-control" id="mcodeIncident" disabled>
                            <input type="hidden" name="Code_Incident" id="mcodeIncidentHidden">
                        </div>
                        <div class="mb-3 col-6">
                            <label for="plmnSelect" class="form-label">PLMN</label>
                            <input type="text" class="form-control" id="mplmn" disabled>
                            <input type="hidden" name="Code_PLMN" id="mplmnSelect">
                        </div>
                    </div>
                    <div class="row">
                        <div class="mb-3 col-6">
                            <label for="mimsi" class="form-label">IMSI</label>
                            <input type="text" class="form-control char-count-input" name="IMSI" id="mimsi">
                            <div class="char-counter" id="counter-mimsi"></div>
                        </div>
                        <div class="mb-3 col-6">
                            <label for="mmsisdn" class="form-label">MSISDN</label>
                            <input type="text" class="form-control char-count-input" name="MSISDN" id="mmsisdn">
                            <div class="char-counter" id="counter-mmsisdn"> </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="mb-3 col-6">
                            <label for="mdate_d" class="form-label">Date début</label>
                            <input type="date" class="form-control" name="date_d" id="mdate_d">
                        </div>
                        <div class="mb-3 col-6">
                            <label for="mdate_f" class="form-label">Date fin</label>
                            <input type="date" class="form-control" name="date_f" id="mdate_f">
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="mcodeTT" class="col-md-4 col-lg-3 col-form-label">Code TT</label>
                        <div class="col-md-8 col-lg-9">
                            <input type="text" class="form-control" name="Code_TT" id="mcodeTT">
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="mcommentaire" class="col-md-4 col-lg-3 col-form-label">Commentaire</label>
                        <div class="col-md-8 col-lg-9">
                        <input type="text" class="form-control" name="Commentaire" id="mcommentaire">
                        </div>
                    </div>
                    <div class="row">
                        <div class="mb-3 col-6">
                            <label for="typeIncident" class="col-form-label">Type Incident</label>
                            <select class="form-select" id="mtypeIncident" name="Type_Incident_id">
                            </select>
                        </div>
                        <div class="mb-3 col-6">
                            <label for="direction" class="col-form-label">Direction</label>
                            <select class="form-select" id="mdirection" name="Direction_id">
                            </select>
                        </div>
                    </div>
                
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                <button type="submit" class="btn btn-primary" id="saveChangesButton">Enregistrer les modifications</button>
            </div>
        </div>
        </form>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Liste des Incidents</h5>
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger" role="alert">
                @TempData["ErrorMessage"]
            </div>
        }
        @if (ViewBag.modelerr != null)
        {
            <div id="errorMessage" class="alert alert-danger">@ViewBag.modelerr</div>

        }
        <div id="incidentMessage"></div>
        @if (hasEditPermission)
        {
        <button type="submit" class="btn btn-primary mb-4" data-bs-toggle="modal" data-bs-target="#addIncidentModal">Ajouter Incident</button>
        }
        <form asp-controller="Manage" asp-action="DeleteSelected" method="post">
            <table id="table_incident" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        @if (hasEditPermission)
                        {
                        <th scope="col"></th>
                        }
                        <th scope="col">Code PLMN</th>
                        <th scope="col">IMSI</th>
                        <th scope="col">MSISDN</th>
                        <th scope="col">Date Debut</th>
                        <th scope="col">Date Fin</th>
                        <th scope="col">Commentaire</th>
                        <th scope="col">Code TT</th>
                        <th scope="col">Type Incident</th>
                        <th scope="col">Direction</th>
                        @if (hasEditPermission)
                        {
                        <th scope="col">Action</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var incident in Model)
                    {

                        <tr>
                            @if (hasEditPermission)
                            {
                            <td><input class="form-check-input" type="checkbox" name="selectedIds" value="@incident.Code_Incident"></td>
                            }
                            <td>@incident.Code_PLMN</td>
                            <td>@incident.IMSI</td>
                            <td>@incident.MSISDN</td>
                            @{
                                string dd = string.Format("{0:dd/MM/yyyy}", incident.date_d);
                                string df = string.Format("{0:dd/MM/yyyy}", incident.date_f);
                            }
                            <td style="white-space: nowrap;">@dd</td>
                            <td style="white-space: nowrap;">@df</td>
                            <td>@incident.Commentaire</td>
                            <td>@incident.Code_TT</td>
                            <td>@incident.TypeIncidentLookup.Value</td>
                            <td>@incident.DirectionLookup.Value</td>
                            @if (hasEditPermission)
                            {
                            
                            <td>
                                <button type="button" class="btn btn-primary btn-sm modifyIncidentButton" data-bs-toggle="modal" data-bs-target="#modifyIncidentModal"
                                        data-code-incident="@incident.Code_Incident"
                                        data-plmn="@incident.Code_PLMN"
                                        data-imsi="@incident.IMSI"
                                        data-msisdn="@incident.MSISDN"
                                        data-dd="@dd"
                                        data-df="@df"
                                        data-commentaire="@incident.Commentaire"
                                        data-code-tt="@incident.Code_TT"
                                        data-type-incident="@incident.TypeIncidentLookup.Id"
                                        data-direction="@incident.DirectionLookup.Id">
                                    <i class="bi bi-pencil"></i>
                                </button>
                            </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
            @if (hasEditPermission)
            {
            
            <input type="hidden" name="className" value="Incident" />
            <input type="checkbox" id="selectAll" class="form-check-input" style="margin-top: 0.4em;margin-left: 0.45em;">
                <label>Tout cocher</label><button type="submit" id="delete-btn-check" class="btn btn-sm btn-danger">Supprimer</button>
    }
        </form>
        <br />
    </div>
</div>

@section Scripts {
    <script>
       
        function countChar(input) {
            const counter = document.getElementById('counter-' + input.id);
            input.value = input.value.replace(/[^0-9]/g, '');

            counter.innerText = "Le nombre de chiffres est: " + input.value.length;

        }

        function validateForm(modalMessageId, operation) {
            let prefix = operation === 'add' ? '' : 'm';
            let codePLMN = document.getElementById(prefix + 'plmnSelect');
            let imsi = document.getElementById(prefix + 'imsi');
            let codeTT = document.getElementById(prefix + 'codeTT');
            let msisdn = document.getElementById(prefix + 'msisdn');
            let typeIncidentId = document.getElementById(prefix + 'typeIncident');
            let directionId = document.getElementById(prefix + 'direction');
            let modalIncidentmessage = $('#' + modalMessageId);

            // validate key pk and fk
            if (!codePLMN.value || !typeIncidentId.value || !directionId.value) {
                modalIncidentmessage.html('Toutes les clés (code plmn , type incident , type trafic et direction) doivent être non nulles.');
                modalIncidentmessage.removeClass().addClass('alert alert-danger');
                return false;
            }
            // validate IMSI
            if (imsi.value && !/^\d{15}$/.test(imsi.value)) {
                modalIncidentmessage.html('IMSI doit contenir exactement 15 chiffres.');
                modalIncidentmessage.removeClass().addClass('alert alert-danger');
                return false;
            }


            // validate Code TT
            if (!/^\w{1,20}$/.test(codeTT.value)) {
                console.log('Code TT should contain up to 20 alphanumeric characters.');
                modalIncidentmessage.html('Code TT doit contenir jusqu\'à 20 caractères alphanumériques.');
                modalIncidentmessage.removeClass().addClass('alert alert-danger');
                return false;
            }

            // validate MSISDN
            if (msisdn.value && !/^\w{1,20}$/.test(msisdn.value)) {
                console.log('MSISDN should contain up to 20 alphanumeric characters.');
                modalIncidentmessage.html('MSISDN doit contenir jusqu\'à 20 caractères alphanumériques.');
                modalIncidentmessage.removeClass().addClass('alert alert-danger');
                return false;
            }

            console.log("Form validation successful.");
            return true;
        }
        function submitForm() {
            if (validateForm("modalIncidentmessage","add")) {
                var form = $('#addIncidentForm');
                $.ajax({
                    url: form.attr('action'),
                    method: form.attr('method'),
                    data: form.serialize(),
                    success: function (response) {
                        let incidentMessage = $('#incidentMessage');
                        incidentMessage.html(response.message);
                        incidentMessage.removeClass();
                        if (response.success) {
                            incidentMessage.addClass('alert alert-success');
                            $('#addIncidentModal').modal('hide');
                        } else {
                            incidentMessage.addClass('alert alert-danger');
                        }
                    },
                    error: function (response) {
                        let incidentMessage = $('#incidentMessage');
                        incidentMessage.html('Une erreur s\'est produite lors de l\'ajout de l\'incident.');
                        incidentMessage.removeClass().addClass('alert alert-danger');
                    }
                });
            }
        }
        function populateLookupDropdowns(prefix = '') {
            fetchLookupData().then(function (lookupData) {
                function populateLookupDropdown(type, selectId) {
                    let select = $('#' + prefix + selectId);
                    select.append($('<option></option>').attr('value', '').text('Sélectionnez un choix'));
                    let filteredData = lookupData.filter(item => item.lookup_Type === type);
                    filteredData.forEach(function (item) {
                        select.append($('<option></option>').attr('value', item.id).text(item.value));
                    });
                }
                // populate dropdowns
                populateLookupDropdown('Type_Incident', 'typeIncident');
                populateLookupDropdown('Direction', 'direction');
            }).catch(function (error) {
                console.error('Error occurred while fetching lookup data:', error);
            });
        }
        var hasModalBeenOpened = false;
        var hasModalModOpened = false;

        $(document).ready(function () {
            $('#table_incident').DataTable();

            $('#addIncidentModal').on('shown.bs.modal', function () {
                if (!hasModalBeenOpened) {
                    loadPLMNCodes();
                    populateLookupDropdowns();
                    hasModalBeenOpened = true;
                }
            });

            $('#addIncidentForm').on('submit', function (e) {
                e.preventDefault();
                submitForm();
            });

            $('#modifyIncidentModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                if (!hasModalModOpened) {
                    populateLookupDropdowns('m');
                    hasModalModOpened = true;
                 
                }

                var codeIncident = button.data('code-incident');
                var plmn = button.data('plmn');
                var imsi = button.data('imsi');
                var msisdn = button.data('msisdn');
                var dd = convertToDateInputValue(button.data('dd'));
                var df = convertToDateInputValue(button.data('df'));
                var commentaire = button.data('commentaire');
                var codeTt = button.data('code-tt');
                var typeIncident = button.data('type-incident');
                var direction = button.data('direction');

                var modal = $(this);
                modal.find('#mcodeIncident').val(codeIncident);
                modal.find('#mcodeIncidentHidden').val(codeIncident);
                modal.find('#mplmn').val(plmn);
                modal.find('#mplmnSelect').val(plmn);
                modal.find('#mimsi').val(imsi);
                modal.find('#mmsisdn').val(msisdn);
                modal.find('#mdate_d').val(dd);
                modal.find('#mdate_f').val(df);
                modal.find('#mcommentaire').val(commentaire);
                modal.find('#mcodeTT').val(codeTt);
                setTimeout(function () {
                    $('#mtypeIncident option[value="' + typeIncident + '"]').prop('selected', true);
                    $('#mdirection option[value="' + direction + '"]').prop('selected', true);
                }, 1000);
               

                const inputs = modal[0].querySelectorAll('.char-count-input');
                inputs.forEach(input => {
                    input.addEventListener('keypress', function (event) {
                        let char = String.fromCharCode(event.which);
                        if (!(/[0-9]/.test(char))) {
                            event.preventDefault();
                        }
                    });

                    const counterDiv = document.querySelector('#counter-' + input.id);
                    let charCount = input.value.length;

                    counterDiv.textContent = "Le nombre de chiffres est : " + charCount;

                    input.addEventListener('input', function () {
                        let charCount = this.value.length;

                        counterDiv.textContent = "Le nombre de chiffres est : " + charCount;
                    });
                });

            });

            $('#modifyIncidentForm').on('submit', function (e) {
                e.preventDefault();
                let form = $(this);
                if (validateForm("modalModIncidentmessage", "m")) {
                    $.ajax({
                        url: form.attr('action'),
                        method: form.attr('method'),
                        data: form.serialize(),
                        success: function (response) {
                            let incidentMessage = $('#incidentMessage');
                            incidentMessage.html(response.message);
                            incidentMessage.removeClass();
                            if (response.success) {
                                incidentMessage.addClass('alert alert-success');
                                $('#modifyIncidentModal').modal('hide');
                            } else {
                                incidentMessage.addClass('alert alert-danger');
                            }
                        },
                        error: function (response) {
                            let incidentMessage = $('#incidentMessage');
                            incidentMessage.html('Une erreur s\'est produite lors de la modification de l\'incident.');
                            incidentMessage.removeClass().addClass('alert alert-danger');
                        }
                    });
                }
            });

        });


    </script>

}